//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.HttpCarRentalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReservationInfo", Namespace="http://schemas.datacontract.org/2004/07/CarRentalService")]
    [System.SerializableAttribute()]
    public partial class ReservationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorrelationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VehicleClassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorrelationId {
            get {
                return this.CorrelationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrelationIdField, value) != true)) {
                    this.CorrelationIdField = value;
                    this.RaisePropertyChanged("CorrelationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dates {
            get {
                return this.DatesField;
            }
            set {
                if ((object.ReferenceEquals(this.DatesField, value) != true)) {
                    this.DatesField = value;
                    this.RaisePropertyChanged("Dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Location {
            get {
                return this.LocationField;
            }
            set {
                if ((this.LocationField.Equals(value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VehicleClass {
            get {
                return this.VehicleClassField;
            }
            set {
                if ((this.VehicleClassField.Equals(value) != true)) {
                    this.VehicleClassField = value;
                    this.RaisePropertyChanged("VehicleClass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HttpCarRentalService.IReservations")]
    public interface IReservations {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservations/Check", ReplyAction="http://tempuri.org/IReservations/CheckResponse")]
        bool Check(Client.HttpCarRentalService.ReservationInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservations/Check", ReplyAction="http://tempuri.org/IReservations/CheckResponse")]
        System.Threading.Tasks.Task<bool> CheckAsync(Client.HttpCarRentalService.ReservationInfo info);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IReservations/Reserve")]
        void Reserve(Client.HttpCarRentalService.ReservationInfo info);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IReservations/Reserve")]
        System.Threading.Tasks.Task ReserveAsync(Client.HttpCarRentalService.ReservationInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservations/Cancel", ReplyAction="http://tempuri.org/IReservations/CancelResponse")]
        bool Cancel(int confirmationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservations/Cancel", ReplyAction="http://tempuri.org/IReservations/CancelResponse")]
        System.Threading.Tasks.Task<bool> CancelAsync(int confirmationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservations/GetStats", ReplyAction="http://tempuri.org/IReservations/GetStatsResponse")]
        int GetStats();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservations/GetStats", ReplyAction="http://tempuri.org/IReservations/GetStatsResponse")]
        System.Threading.Tasks.Task<int> GetStatsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservations/GetConfirmationNumber", ReplyAction="http://tempuri.org/IReservations/GetConfirmationNumberResponse")]
        int GetConfirmationNumber(string correlationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservations/GetConfirmationNumber", ReplyAction="http://tempuri.org/IReservations/GetConfirmationNumberResponse")]
        System.Threading.Tasks.Task<int> GetConfirmationNumberAsync(string correlationId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReservationsChannel : Client.HttpCarRentalService.IReservations, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReservationsClient : System.ServiceModel.ClientBase<Client.HttpCarRentalService.IReservations>, Client.HttpCarRentalService.IReservations {
        
        public ReservationsClient() {
        }
        
        public ReservationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReservationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReservationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReservationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Check(Client.HttpCarRentalService.ReservationInfo info) {
            return base.Channel.Check(info);
        }
        
        public System.Threading.Tasks.Task<bool> CheckAsync(Client.HttpCarRentalService.ReservationInfo info) {
            return base.Channel.CheckAsync(info);
        }
        
        public void Reserve(Client.HttpCarRentalService.ReservationInfo info) {
            base.Channel.Reserve(info);
        }
        
        public System.Threading.Tasks.Task ReserveAsync(Client.HttpCarRentalService.ReservationInfo info) {
            return base.Channel.ReserveAsync(info);
        }
        
        public bool Cancel(int confirmationNumber) {
            return base.Channel.Cancel(confirmationNumber);
        }
        
        public System.Threading.Tasks.Task<bool> CancelAsync(int confirmationNumber) {
            return base.Channel.CancelAsync(confirmationNumber);
        }
        
        public int GetStats() {
            return base.Channel.GetStats();
        }
        
        public System.Threading.Tasks.Task<int> GetStatsAsync() {
            return base.Channel.GetStatsAsync();
        }
        
        public int GetConfirmationNumber(string correlationId) {
            return base.Channel.GetConfirmationNumber(correlationId);
        }
        
        public System.Threading.Tasks.Task<int> GetConfirmationNumberAsync(string correlationId) {
            return base.Channel.GetConfirmationNumberAsync(correlationId);
        }
    }
}
